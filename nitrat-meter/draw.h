/*----Функция вывода меню----*/
void menu (void) {
	if (T_menu==0) return;                 //Если еще не прошло 0.26 сек - выход
	clean_cache();                         //Очистка КЭШ-буфера в ОЗУ МК
	
	if (rezh == 0 && zar > 0) {               //Если режим выключения работы и зарядки - индикация процесса зарядки
		menu_zar();                          //Вывод меню процесса зарядки
	} else if (menu_cnt == 0) {
		menu_nach();     //Вывод начального меню
	} else if (menu_cnt == 1) {
		menu_prod();     //Вывод меню выбора продукта
	} else if (menu_cnt == 2) {
		menu_izm();      //Вывод меню измерения
	} else if (menu_cnt == 3) {
		menu_nastr();    //Вывод меню настроек
	} else if (menu_cnt == 4) {
		menu_PDK();      //Вывод меню норм ПДК
	}
	wr_batt();                             //Вывод символа батарейки в правом верхнем углу
	LcdUpdate();                           //Вывод информации в дисплей
	T_menu = 0;                              //Сброс признака прошедшего 0,26-секундного интервала
}
//
/*----Функция вывода начального меню----*/
void menu_nach (void) {
	unsigned char m=0;                     //Счетчик строк
//Вывод курсора
  LcdGotoXYFont(0, mnc_nach+1);          //Установка позиции: х=0, y=1...3
  LcdChr(166);                           //Символ закрашенного треугольника вправо |>
//Вывод надписей меню
  while (m<3)
  { LcdGotoXYFont(1, m+1);               //Установка координат для вывода первого символа строки
    LcdNadp_10(m);                       //Вывод надписей "Измерение ", "Настройки ", "Нормы ПДК "
    LcdStr("  ");                        //Вывод 2-х пробелов
    LcdChr(165);                         //Символ пустого треугольника вправо |>
    m++;
  }
//Вывод напряжения аккумулятора
  LcdGotoXYFont(1, 5);
  LcdNadp_6(3);                          //"Uакк. "
  LcdCifr(0, Ubat, 1, 2);                //Вывод напряжения в В
  LcdStr(" В");                          //Вывод " В"
//
  return;
}
//
/*----Функция вывода меню выбора продукта----*/
void menu_prod (void)
{ unsigned char i=0;                     //Счетчик символов
  unsigned char m=0;                     //Счетчик по горизонтали массива nadp_mPDK[31][12]
  unsigned char dat=0;                   //Данные
//Вывод верхнего заголовка
  LcdGotoXYFont(0, 0);                   //x=0, y=0
  LcdChr(167);                           //Символ пустого треугольника влево <|
  LcdNadp_10(3);                         //" ПРОДУКТ: "
//Вывод курсора
  LcdGotoXYFont(0, 1+n_prod-sdvig_prod); //x=0, y=1...5
  LcdChr(166);                           //Символ закрашенного треугольника вправо |>
//Вывод 5 строк надписей меню из массива nadp_mPDK[31][12]
  while (m<5)
  { LcdGotoXYFont(1, m+1);               //Установка координат для вывода первого символа строки
    i=0;                                 //Сброс счетчика символов надписи
    while (i<8)                          //Вывод строки из 8 символов
    { if ((m+sdvig_prod)<30)             //Если названия неизменные - из flash
      { LcdChr(pgm_read_byte(&nadp_mPDK[m+sdvig_prod][i]));
        dat=' ';
      }
      else                               //Иначе - из ОЗУ <- EEPROM
      { LcdChr(mas_name[m+sdvig_prod-30][i]);
        dat='*';
      }
      i++;
    }
    m++;
    LcdChr(dat);                         //Символ " " или "*"
    LcdStr("  ");                        //Вывод 2-х пробелов
    LcdChr(165);                         //Символ пустого треугольника вправо |>
  }
//Вывод стрелок вверх-вниз в последней колонке дисплея
  LcdGotoXYFont(13, 1);
  if (sdvig_prod>0) LcdChr(163);         //Символ пустого треугольника вверх ^
  LcdGotoXYFont(13, 5);
  if (sdvig_prod<31) LcdChr(161);        //Символ пустого треугольника вниз V
//
  
  return;
}
//
/*----Функция вывода меню измерения----*/
void menu_izm (void)
{ unsigned char i=0;                     //Счетчик символов
  unsigned char max=0;                   //Максимум для вывода статистики
  unsigned char d=0;                     //Промежуточные данные
  unsigned int Gx;                       //Измеренное значение проводимости в мкСм*10
  unsigned int Gmax;                     //Максимальное значение проводимости в мкСм*10
  unsigned int Gmin;                     //Минимальное значение проводимости в мкСм*10
  unsigned int dat;                      //Промежуточные даные для вычислений
  unsigned long datl;                    //Промежуточные даные для вычислений
  Gx=clk_Gx10(ADCx10);                   //Вычисление измеренной проводимости в мкСм*10
  if (Gx==65535) korr_zam=0;             //Если замер некорректный korr_zam=0 - ошибка
  else korr_zam=1;                       //Иначе, если корректный замер korr_zam=1 - ОК
  Gmax=clk_Gx10(eeprom_read_word(&mas_lim[0][n_prod]));//Вычисление максимального значения проводимости в мкСм*10
  Gmin=clk_Gx10(eeprom_read_word(&mas_lim[1][n_prod]));//Вычисление минимального значения проводимости в мкСм*10
//Вывод стрелки-указателя влево
  LcdGotoXYFont(0, 0);                   //x=0, y=0
  LcdChr(167);                           //Вывод символа пустого треугольника влево <|
//Вывод строки названия проверяемого продукта
  if ((mnc_izm!=4)||(akt!=1))            //Если не пункт редактир.названия
  { while (i<8)                          //Вывод строки из 8 символов
    { if (n_prod<30)                     //Если названия неизменные - из flash
      { LcdChr(pgm_read_byte(&nadp_mPDK[n_prod][i]));
      }
      else                               //Иначе - название из ОЗУ <- EEPROM
      { LcdChr(mas_name[n_prod-30][i]);
      }
      i++;
    }
  }
//Вывод %
  if ((mnc_izm<3)&&(zam>0))              //Если был замер и пункты меню 0(замер),1(сохр.) или 2(статистика)
  { if (Gmax!=Gmin)                      //Если Gmax=Gmin - проценты не выводятся
    { if (Gx>=Gmin)                      //Если % положительные
      { datl=Gx;
        dat=((datl-Gmin)*100)/(Gmax-Gmin);//Вычисление %
        if (dat<999) LcdCifrBuf(2, dat, 3, 0, 0);//Если <999 - запись в текстовый буфер вычисленных %
        else sprintf(lcd_buf, "???");    //Иначе - копирование в буфер строки "???"
        LcdStringXY(9, 0);               //Вывод строки из текстового буфера x=9, y=0
      }
      else                               //Иначе, если % отрицательные
      { datl=Gmin;                       //Изменение типа переменной на unsigned long
        dat=((datl-Gx)*100)/(Gmax-Gmin); //Вычисление %
        if (dat<99) LcdCifrBuf(1, dat, 2, 0, 0);//Если <99 - запись в текстовый буфер вычисленных %
        else sprintf(lcd_buf, "??");     //Иначе - копирование в буфер строки "???"
        LcdChr('-');                     //Если % отрицательные - вывод знака "-"
        LcdStringXY(10, 0);              //Вывод строки из текстового буфера x=9, y=0
      }
      LcdChr('%');                       //Вывод символа "%"
    }
  }
/*Счетчик пунктов меню измерений mnc_izm:
  0-замер,1-сохранить,2-статистика,3-очистка статист.,4-ред.назв
*/
  if (mnc_izm<2)                         //Если замер или сохранение
  { 
  //Вывод надписей первой строки меню
    if (mnc_izm==0) d=166;               //Если пункт запуска замера - символ закрашенного треугольника вправо |>
    else d=' ';                          //Иначе - пробел
    LcdChrXY(0, 1, d);                   //Вывод символа в позицию x=0, y=1
    LcdNadp_6(0);                        //Вывод надписи "Замер "
    if (zam==0) LcdNadp_6(6);            //Если еще не было ни одного замера - вывод надписи "(мкСм)"
    else                                 //Иначе - вывод проводимости в мкСм
    { if (Gx==65535) sprintf(lcd_buf, "????.?");//Если признак переполнения - копирование строки в буфер
      else LcdCifrBuf(3, Gx, 4, 1, 0);   //Иначе - вывод в буфер проводимости в мкСм
      LcdString();                       //Вывод строки из буфера с текущей позиции
    }
    LcdChr(165);                         //Символ пустого треугольника вправо |>
  //Вывод надписей второй строки меню
    if ((mnc_izm==1)&&(zam%3==1)) d=166; //Если пункт сохранения замера и замер ещё не сохранен - символ закрашенного треугольника вправо |>
    else d=' ';                          //Иначе - пробел
    LcdChrXY(0, 2, d);                   //Вывод символа в позицию x=0, y=2
    if (Gx==65535) d=0;                  //Если проводимость не известна - пункт Сохранить не выводится
    else d=zam%3;                        //Иначе - "Сохранить " или "Сохранено "
    LcdNadp_10(6+d);                     //Вывод надписей: "          ", "Сохранить ", "Сохранено "
    if (d==1) LcdChrXY(13, 2, 165);      //Если замер ещё не сохранен - символ пустого треугольника вправо |>
  //Вывод надписей третьей строки меню
    LcdGotoXYFont(1, 3);                 //x=1, y=3
    LcdNadp_6(1);                        //Вывод надписи "Макс. "
    if (Gmax==65535) LcdStr("????.?");
    else LcdCifr(3, Gmax, 4, 1);         //Вывод Gmax в мкСм
  //Вывод надписей четвертой строки меню
    LcdGotoXYFont(1, 4);                 //x=1, y=4
    LcdNadp_6(2);                        //Вывод надписи "Мин.  "
    if (Gmin==65535) LcdStr("????.?");
    else LcdCifr(3, Gmin, 4, 1);         //Вывод Gmin в мкСм
  //Вывод надписей пятой строки меню
    LcdGotoXYFont(1, 5);                 //x=1, y=5
    LcdNadp_8(5);                        //Вывод надписи "Замеров "
    LcdGotoXYFont(8, 5);                 //x=8, y=5
    LcdCifr(4, eeprom_read_word(mas_Nzam+n_prod), 5, 0);//Вывод числа выполненных замеров для выбранного продукта
    LcdChr(161);                         //Символ пустого треугольника вниз V
  }
  else
  { if (mnc_izm==2)                      //Иначе, если вывод статистики
    { 
    //Вывод текущего измеренного значения в мкСм
      if (zam!=0)                        //Если был замер
      { if (Gx==65535) sprintf(lcd_buf, "????.?");//Если признак переполнения - копирование строки в буфер
        else LcdCifrBuf(3, Gx, 4, 1, 0); //Вывод проводимости в мкСм
        LcdStringXY(1, 1);
        LcdNadp_6(7);                    //" мкСм "
      }
    //Вывод стрелок прокрутки
      LcdChrXY(13, 1, 163);              //Символ пустого треугольника вверх ^
      LcdGotoXYFont(13, 3);              //x=13, y=4
      LcdChr(161);                       //Символ пустого треугольника вниз V
    //Вывод шкалы из массива skal_stat[]
      LcdGotoXYFont(0, 5);               //x=0, y=5
      i=0;
      while (i<84)                       //Вывод в кэш-буфер ОЗУ байта в цикле
      { LcdCache[LcdCacheIdx++]=pgm_read_byte(skal_stat+i);
        i++;
      }
  //Вывод статистического графика
    //Нахождение максимального значения в ячейках с числом замеров для отображаемого продукта
      i=0;
      max=0;
      while (i<20)                       //Перебор 20 ячеек массива mas_stat[][] в EEPROM
      { d=eeprom_read_byte(&mas_stat[n_prod][i]);//Считывание значения из EEPROM
        if (d>max) max=d;
        i++;
      }
    //Вывод статистики
      if (max>0)                         //Если найден хотя бы один замер
      { i=0;
        while (i<20)                     //Перебор 20 ячеек массива mas_stat[][] в EEPROM
        { dat=(22*eeprom_read_byte(&mas_stat[n_prod][i]))/max;//Максимальная высота - 22 пикселя
          d=dat;
          if (d>0) LcdRect(12+i*3, 38, d, 3, 1);//Рисование закрашенного прямоугольника (низ: y=38)
          i++;
        }
      }
    //Вывод местоположения текущего замера в виде указателя-стрелки под шкалой
      if ((zam>0)&&(Gmax!=Gmin))         //Если был замер и имеются Gmax и Gmin
      { if (Gx>=Gmin)                    //Если вывод правее минимума
        { datl=Gx;                       //Изменение типа переменной на unsigned long
          if (Gx==Gmax) dat=71;
          else dat=(datl-Gmin)*60/(Gmax-Gmin)+12;//x=12...71, 60 ячеек
          if (dat>83) d=83;              //Ограничение при зашкаливании
          else d=dat;
        }
        else                             //Иначе - вывод левее минимума
        { datl=Gmin;                     //Изменение типа переменной на unsigned long
          dat=(datl-Gx)*59/(Gmax-Gmin);
          if (dat>12) d=0;
          else d=12-dat;
        }
        LcdLine(d, 45, d, 47, 2);          //Вывод центральной вертикальной линии
        if (d>0) LcdLine(d-1, 46, d-1, 47, 2);//Вывод левой боковой короткой вертикальной линии
        if (d>1) LcdPixel(d-2, 47, 2);     //Вывод пикселя слева
        if (d<83) LcdLine(d+1, 46, d+1, 47, 2);//Вывод левой боковой короткой вертикальной линии
        if (d<82) LcdPixel(d+2, 47, 2);    //Вывод пикселя слева
      }
    }
    else                                 //Иначе, если пункты "Очистить статистику" или "Ред.назван"
    {//Затирание %
      LcdGotoXYFont(9, 0);               //x=9, y=0
      LcdStr("    ");                    //4 пробела
      if (akt==0)                        //Если не активные пункты
      {//Вывод надписей
        i=2;
        if (n_prod>29) d=5;              //Если название продукта из EEPROM - вывод до строки "Ред.назван"
        else d=4;                        //Иначе - только "Очистить статистику"
        while (i<d)
        { LcdGotoXYFont(1, i);           //x=1, y=2...4
          LcdNadp_10(i+7);               //9-"Очистить  ", 10-"статистику", 11-"Ред.назван"
          i++;
        }
        if (d==5) LcdChr('.');           //Вывод точки после "Ред.назван"
      //Вывод курсора слева
        LcdChrXY(0, (mnc_izm-2)*2, 166); //Символ закрашенного треугольника вправо |>
      //Вывод стрелок-указателей справа
        LcdChrXY(13, 1, 163);            //Символ пустого треугольника вверх ^
        LcdChrXY(13, 3, 165);            //Символ пустого треугольника вправо |>
        if (d==5) LcdChrXY(13, 4, 165);  //Если название продукта из EEPROM - символ пустого треугольника вправо |>
      }
      else                               //Иначе, если активен какой-либо из пунктов "Очистить статистику" или "Ред.назван"
      { if (mnc_izm==3)                  //Иначе, если подтверждение очистки статистики
        {//Вывод надписей
          LcdGotoXYFont(3, 2);           //x=3, y=2
          LcdNadp_10(12);                //"Очистить? "
          LcdChrXY(0, 4, 163);           //Символ пустого треугольника вверх ^
          LcdChr(' ');                   //Пробел
          LcdNadp_10(13);                //"Да     Нет"
          LcdChr(' ');                   //Пробел
          LcdChr(165);                   //Символ пустого треугольника вправо |>
          d=167;                         //Символ пустого треугольника влево <| в позиции x=0, y=0
        }
        else                             //Иначе, если редактирование названия продукта в EEPROM
        { d=' ';                         //Символ пробела в позиции x=0, y=0
          if (n_nazv==0) d=167;          //Если первая редактируемая буква - символ пустой треугольник влево <| в позиции x=0, y=0
          else LcdChrXY(1, 2, 167);      //Иначе - вывод пустого треугольника влево <| в позиции x=1, y=2
        //Вывод надписей
          LcdGotoXYFont(1, 0);           //x=1, y=0
          LcdChr(' ');                   //Пробел
          LcdNadp_10(14);                //"РЕД.НАЗВАН"
          LcdChr('.');                   //Точка
          LcdGotoXYFont(3, 2);           //x=3, y=2
          i=0;
          while (i<8)                    //Вывод строки из 8 символов
          { LcdChr(mas_name[n_prod-30][i]);
            i++;
          }
          if (n_nazv<7)                  //Если не последняя редактируемая буква
          { LcdChr(' ');                 //Пробел
            LcdChr(165);                 //Символ пустого треугольника вправо |>
          }
        //Вывод курсора под редактируемой буквой
          LcdChrXY(3+n_nazv, 3, 164);    //Символ двух закрашенных треугольников вверх+вниз
        }
        LcdChrXY(0, 0, d);               //Вывод символа в позиции x=0, y=0
      }
    }
  }
  return;
}
//
/*----Функция вывода меню настроек----*/
void menu_nastr (void)
{ unsigned char i=0;                     //Счетчик символов
  unsigned char m=0;                     //Счетчик по горизонтали массива nadp_mPDK[31][12]
  unsigned char y_kur=0;                 //Местоположение курсора по y
  unsigned char dat=0;                   //Данные
  unsigned int r=0;                      //Сопротивление/проводимость
//0-время подсв.,1-яркость,2-таймер,3-звук,4-контрастность,5-Uакк,6-Rx
//Вывод верхнего заголовка
  LcdGotoXYFont(0, 0);                   //x=0, y=0
  if (akt==1) dat=32;                    //Если активен пункт меню - пробел
  else dat=167;                          //Иначе - символ пустого треугольника влево <|
  LcdChr(dat);                           //Символ пустого треугольника влево <| или пробел
  LcdNadp_10(4);                         //Вывод надписи " НАСТРОЙКИ"
//Вывод первой страницы меню настроек
  if (mnc_nastr<5)                       //Если первая страница меню настроек
  { //Вычисление местоположения курсора по y
    y_kur=1+mnc_nastr;
  //Вывод 5 строк надписей меню
    while (m<5)
    { LcdGotoXYFont(1, m+1);             //Установка координат для вывода первого символа строки
      LcdNadp_8(m);                      //Вывод надписей: "T подсв.", "Яркость ", "Таймер  ", "Звук    ", "Контраст"
    //Вывод регулируемых параметров
      i=0;                               //Сброс счетчика символов надписи
      if (m==0)                          //Если пункт таймера подсветки
      { LcdNadp_4(5+ligh_off);           //Вывод надписей " ---", " 10с", " 15с", " 20с", " 30с", " 45с", " 60с"
      }
      else
      { if (m==1)                        //Если пункт яркости подсветки
        { LcdSkalaXYFont (9, 2, 3, yark*100/9);//Вывод шкалы из 10 черточек, заполненной на "процент"
        }
        else
        { if (m==2)                      //Если пункт таймера
          { LcdNadp_4(taym_off);         //Вывод надписей "Выкл", "1мин", "2мин", "3мин", "5мин"
          }
          else
          { if (m==3)                    //Если пункт звука
            { LcdNadp_4(13+sound);       //Вывод "Выкл" или "Вкл."
            }
            else                         //Иначе - контрастность дисплея
            { LcdCifr(3, contrast, 4, 0);
            }
          }
        }
      }
    //Вывод значков в правой колонке
      if (akt==1)                        //Если активен пункт меню настроек
      { if (m==mnc_nastr) dat=164;       //Если строка активного пункта - символ двух закрашенных треугольников вверх+вниз
        else dat=32;                     //Иначе - символ пробела
      }
      else dat=165;                      //Иначе - символ пустого треугольника вправо |>
      LcdChrXY(13,m+1,dat);                       //Вывод символа
      m++;
    }
  }
//Вывод второй страницы меню настроек
  else {                                  //Иначе - вывод второй страницы меню настроек
	meassure();                             //Проведение замера
  //Вычисление местоположения курсора по y и определение вида курсора
    y_kur=mnc_nastr-3;
  //Вывод верхнего заголовка "КАЛИБРОВКА"
    LcdGotoXYFont(0, 0);                 //x=0, y=0
    if (akt==1) dat=32;                  //Если активен пункт меню - пробел
    else dat=163;                        //Иначе - символ пустого треугольника вверх ^
    LcdChr(dat);                         //Символ пустого треугольника вверх ^ или пробел
    LcdChr(' ');                         //Вывод пробела
    LcdNadp_10(5);                       //Вывод надписи "КАЛИБРОВКА"
  //Вывод пункта напряжения аккумулятора
    LcdGotoXYFont(1, 2);                 //x=1, y=2
    LcdNadp_6(4);                        //"Uакк,В"
    LcdCifr(1, Ubat_mV, 2, 3);           //Вывод напряжения в X.XXX В
    if (akt==1)                          //Если активен пункт меню настроек
    { if (mnc_nastr==5) dat=164;         //Если активен данный пункт - символ двух закрашенных треугольников вверх+вниз
      else dat=32;                       //Иначе - символ пробела
    }
    else dat=165;                        //Иначе - символ пустого треугольника вправо |>
    LcdChr(dat);                         //Вывод символа
  //Вывод пункта измеренного сопротивления
    LcdGotoXYFont(1, 3);                 //x=1, y=3
    LcdNadp_6(5);                        //Вывод надписи "Rx,Ом "
    LcdChr(' ');                         //Вывод пробела
    r=clk_Rx(ADCx10);                    //Вычисление Rx
    if (r==65535) sprintf(lcd_buf, "?????");//Если признак переполнения - копирование строки в буфер
    else LcdCifrBuf(2, r, 5, 0, 0);      //Иначе - вывод сопротивления в Омах
    LcdStringXY(8, 3);
    if (akt==1)                          //Если активен пункт меню настроек
    { if (mnc_nastr==6) dat=164;         //Если активен данный пункт - символ двух закрашенных треугольников вверх+вниз
      else dat=32;                       //Иначе - символ пробела
    }
    else dat=165;                        //Иначе - символ пустого треугольника вправо |>
    LcdChr(dat);                         //Вывод символа
  //Вывод пункта измеренной проводимости
    LcdGotoXYFont(0, 5);                 //x=0, y=4
    LcdNadp_8(6);                        //Вывод надписи "Gx,мкСм "
    r=clk_Gx10(ADCx10);                  //Вычисление Gx
    if (r==65535) sprintf(lcd_buf, "????.?");//Если признак переполнения - копирование строки в буфер
    else LcdCifrBuf(3, r, 4, 1, 0);      //Иначе - вывод проводимости в мкСм
    LcdStringXY(8, 5);
  }
//Вывод курсора
  LcdGotoXYFont(0, y_kur);               //x=0, y=1...5
  if (akt==1) dat=167;                   //Если активный пункт меню - пустой треугольник влево <|
  else dat=166;                          //Иначе - закрашенный треугольник вправо |>
  LcdChr(dat);                           //Символ закрашенного треугольника вправо |> или пустого влево <|
//
  return;
}
//
/*----Функция вывода меню норм ПДК----*/
void menu_PDK (void)
{ unsigned char i=0;                     //Счетчик символов
  unsigned char m=0;                     //Счетчик по горизонтали массива nadp_mPDK[31][12]
//Вывод верхнего заголовка "Нормы ПДК,мг"
  LcdChrXY(0, 0, 167);                   //Символ пустого треугольника влево <|, x=0, y=0
  LcdNadp_8(7);                          //Вывод надписи "Нормы ПД"
  LcdNadp_4(12);                         //Вывод надписи "К,мг"
//Вывод курсора
  LcdChrXY(0, 1+mnc_PDK-sdvig_PDK, 166); //x=0, y=1...5, cимвол закрашенного треугольника вправо |>
//Вывод 5 строк надписей меню из массива nadp_mPDK[31][12]
  while (m<5)
  { LcdGotoXYFont(1, m+1);               //Установка координат для вывода первого символа строки
    i=0;                                 //Сброс счетчика символов надписи
    while (i<12)                         //Вывод строки
    { LcdChr(pgm_read_byte(&nadp_mPDK[m+sdvig_PDK][i]));
      i++;
    }
    m++;
  }
//Вывод стрелок вверх-вниз в последней колонке дисплея
  if (sdvig_PDK>0) LcdChrXY(13, 1, 163); //Символ пустого треугольника вверх ^
  if (sdvig_PDK<26) LcdChrXY(13, 5, 161);//Символ пустого треугольника вниз V
//
  return;
}
//
/*----Функция вывода меню сообщений----*/
void menumess (unsigned char ms)
{ //ms=0 - "Выключение"
  //ms=1 - "Аккумулятор разряжен!"
  //ms=2 - "Аккумулятор заряжен. Выключение"
  //ms=3 - "Аккумулятор заряжен!"
  //ms=4 - "Статистика очищена"
  //ms=5 - "Замер сохранён!"
  clean_cache();                         //Очистка КЭШ-буфера в ОЗУ МК
  unsigned char i=0;                     //Счетчик символов
  unsigned char m=0;                     //Счетчик по горизонтали массива tab_mes[][]
  while (m<3)
  { LcdGotoXYFont(2, pgm_read_byte(&tab_mes[ms][m*2]));//Установка координат для вывода первого символа строки
    i=0;                                 //Сброс счетчика символов надписи
    while (i<11)
    { LcdChr(pgm_read_byte(&nadpis_mes[pgm_read_byte(&tab_mes[ms][m*2+1])][i]));
      i++;
    }
    m++;
  }
  wr_batt();                             //Вывод символа батарейки в правом верхнем углу
  LcdUpdate();                           //Вывод информации в дисплей
  return;
}
//
/*----Функция вывода символа батарейки в правом верхнем углу----*/
void wr_batt (void)
{ if (zar==1) batter=6;                  //Если идет процесс зарядки - символ сетевой вилки
  LcdGotoXYFont(13, 0);                  //Позиция символа: x=13, верхняя строка
  LcdChr(169+batter);                    //Вывод символа в буфер ОЗУ МК
  return;
}
//
/*----Функция вывода меню зарядки----*/
void menu_zar (void)
{ unsigned char persent;                 //Процент заполнения символа батареи
//Вывод большого символа батареи
  if (Ubat>415) persent=100;             //Uбат>4,15В - 100%
  else if (Ubat>380) persent=(Ubat-380)*25/35+75;//Uбат>3,8В - 75...100%
  else if (Ubat>360) persent=(Ubat-360)*50/20+25;//Uбат>3,6В - 25...75%
  else if (Ubat>300) persent=(Ubat-300)*25/60;//Uбат>3,0В - 0...25%
  else persent=0;                        //Uбат<3,0В - 0%
  LcdBatt(34, 2, 48, 28, persent);       //Вывод большого символа батареи с заполнением на %
//Вывод напряжения батареи
  LcdCifrBuf(0, Ubat, 1, 2, 0);
  LcdStringBold(1, 4);
  LcdStrBold(" В");
  return;
}
