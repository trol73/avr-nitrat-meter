void menu_zar (void);                    //Функция вывода меню зарядки
void menu_main (void);                   //Функция вывода начального меню
void menu_product (void);                   //Функция вывода меню выбора продукта
void menu_izm (void);                    //Функция вывода меню измерения
void menu_nastr (void);                  //Функция вывода меню настроек
void menu_PDK (void);                    //Функция вывода меню норм ПДК

/**
 * Функция вывода меню
 **/
void menu() {
	if (T_menu == 0) {
		return;                 //Если еще не прошло 0.26 сек - выход
	}
	clean_cache();                         //Очистка КЭШ-буфера в ОЗУ МК
	
	if (rezh == 0 && zar > 0) {               //Если режим выключения работы и зарядки - индикация процесса зарядки
		menu_zar();                          //Вывод меню процесса зарядки
	} else {
		switch (menu_cnt) {
			case 0:
				menu_main();     //Вывод начального меню
				break;
			case 1:
				menu_product();     //Вывод меню выбора продукта
				break;
			case 2:
				menu_izm();      //Вывод меню измерения
				break;
			case 3:
				menu_nastr();    //Вывод меню настроек
				break;
			case 4:
				menu_PDK();      //Вывод меню норм ПДК
				break;

		}
	}
	wr_batt();                             //Вывод символа батарейки в правом верхнем углу
	LcdUpdate();                           //Вывод информации в дисплей
	T_menu = 0;                              //Сброс признака прошедшего 0,26-секундного интервала
}

/**
 * Функция вывода начального меню
 */
void menu_main() {
	//Вывод курсора
	lcd_OutCharXY(CHAR_ARROW_RIGHT_FILLED, 0, mnc_nach+1);                           //Символ закрашенного треугольника вправо |>
	//Вывод надписей меню
	lcd_OutStrXY(STR_MAIN_MENU_MEASSURE, 1, 1);
	lcd_OutStrXY(STR_MAIN_MENU_SETTINGS, 1, 2);
	lcd_OutStrXY(STR_MAIN_MENU_LIMITS, 1, 3);
	//Вывод напряжения аккумулятора
	lcd_OutStrXY(STR_UAKK_V, 1, 5);
	lcd_OutInt(0, Ubat, 1, 2);                // Вывод напряжения в В
	//lcd_OutStr(STR__V);						// Вывод " В"
}
//
/*----Функция вывода меню выбора продукта----*/
void menu_product() {
	//Вывод верхнего заголовка
	lcd_OutCharXY(CHAR_ARROW_LEFT_EMPTY, 0, 0);
	lcd_OutStr(STR_PRODUCT_TITLE);
	//Вывод курсора
	lcd_OutCharXY(CHAR_ARROW_RIGHT_FILLED, 0, 1+n_prod-sdvig_prod);
	// //Вывод 5 строк надписей меню из массива nadp_mPDK[31][12]
	for (uint8_t m = 0; m < 5; m++) {
		bool builtIn = m + sdvig_prod < 30;
		lcd_GotoXY(1, m+1);
		for (uint8_t i = 0; i < 8; i++) {
			// Если названия неизменные - из flash
			if (builtIn) {
				lcd_OutChar(pgm_read_byte(&nadp_mPDK[m+sdvig_prod][i]));
			} else {    //Иначе - из ОЗУ <- EEPROM
				lcd_OutChar(mas_name[m+sdvig_prod-30][i]);
			}
		}
		lcd_OutChar(builtIn ? ' ' : '*');
	    lcd_OutStr(STR___);                       //Вывод 2-х пробелов
	    lcd_OutChar(CHAR_ARROW_RIGHT_EMPTY);
	}
	//Вывод стрелок вверх-вниз в последней колонке дисплея
	if (sdvig_prod > 0) {
		lcd_OutCharXY(CHAR_ARROW_UP_EMPTY, 13, 1);         //Символ пустого треугольника вверх ^
	}
	if (sdvig_prod < 31) {
		lcd_OutCharXY(CHAR_ARROW_DOWN_EMPTY, 13, 5);        //Символ пустого треугольника вниз V
	}
}
//
/*----Функция вывода меню измерения----*/
void menu_izm() {
	unsigned char i=0;                     //Счетчик символов
	unsigned char max=0;                   //Максимум для вывода статистики
	unsigned char d=0;                     //Промежуточные данные
	unsigned int Gmax;                     //Максимальное значение проводимости в мкСм*10
	unsigned int Gmin;                     //Минимальное значение проводимости в мкСм*10
	unsigned int dat;                      //Промежуточные даные для вычислений
	unsigned long datl;                    //Промежуточные даные для вычислений

	uint16_t  Gx = clk_Gx10(ADCx10);                   //Вычисление измеренной проводимости в мкСм*10
	meassureOk = Gx < 65535;

	Gmax = clk_Gx10(eeprom_read_word(&mas_lim[0][n_prod]));//Вычисление максимального значения проводимости в мкСм*10
	Gmin = clk_Gx10(eeprom_read_word(&mas_lim[1][n_prod]));//Вычисление минимального значения проводимости в мкСм*10
	//Вывод стрелки-указателя влево
	lcd_OutCharXY(CHAR_ARROW_LEFT_EMPTY, 0, 0);
	//Вывод строки названия проверяемого продукта
	if (mnc_izm != 4 || akt != 1) {           //Если не пункт редактир.названия
		while (i < 8) {                          //Вывод строки из 8 символов
			if (n_prod < 30) {                    //Если названия неизменные - из flash
				lcd_OutChar(pgm_read_byte(&nadp_mPDK[n_prod][i]));
			} else {                              //Иначе - название из ОЗУ <- EEPROM
				lcd_OutChar(mas_name[n_prod-30][i]);
			}
			i++;
		}
	}
	//Вывод %
	if ( mnc_izm < 3 &&  zam > 0) {             //Если был замер и пункты меню 0(замер),1(сохр.) или 2(статистика)
		if ( Gmax != Gmin) {                     //Если Gmax=Gmin - проценты не выводятся
			if (Gx >= Gmin) {                     //Если % положительные
				datl = Gx;
				dat = ((datl-Gmin)*100)/(Gmax-Gmin);//Вычисление %
				if (dat < 999) {
					lcd_OutIntBuf(2, dat, 3, 0, 0);//Если <999 - запись в текстовый буфер вычисленных %
				} else {
					sprintf(lcd_buf, "???");    //Иначе - копирование в буфер строки "???"
				}
				LcdStringXY(9, 0);               //Вывод строки из текстового буфера x=9, y=0
			} else {                               //Иначе, если % отрицательные
				datl = Gmin;                       //Изменение типа переменной на unsigned long
				dat = ((datl-Gx)*100)/(Gmax-Gmin); //Вычисление %
				if (dat < 99) {
					lcd_OutIntBuf(1, dat, 2, 0, 0);//Если <99 - запись в текстовый буфер вычисленных %
				} else {
					sprintf(lcd_buf, "??");     //Иначе - копирование в буфер строки "???"
				}
				lcd_OutChar('-');                     //Если % отрицательные - вывод знака "-"
				LcdStringXY(10, 0);              //Вывод строки из текстового буфера x=9, y=0
			}
			lcd_OutChar('%');                       //Вывод символа "%"
		}
	}
/*Счетчик пунктов меню измерений mnc_izm:
  0-замер,1-сохранить,2-статистика,3-очистка статист.,4-ред.назв
*/
	if (mnc_izm < 2) {                         //Если замер или сохранение
		//Вывод надписей первой строки меню
		if (mnc_izm == 0) {
			d = 166;               //Если пункт запуска замера - символ закрашенного треугольника вправо |>
		} else {
			d = ' ';                          //Иначе - пробел
		}
		lcd_OutCharXY(d, 0, 1);                   //Вывод символа в позицию x=0, y=1
		LcdNadp_6(0);                        //Вывод надписи "Замер "
		if (zam == 0) {
			LcdNadp_6(6);            //Если еще не было ни одного замера - вывод надписи "(мкСм)"
		} else {                                //Иначе - вывод проводимости в мкСм
			if (Gx == 65535) {
				sprintf(lcd_buf, "????.?");//Если признак переполнения - копирование строки в буфер
			} else {
				lcd_OutIntBuf(3, Gx, 4, 1, 0);   //Иначе - вывод в буфер проводимости в мкСм
			}
			LcdString();                       //Вывод строки из буфера с текущей позиции
		}
		lcd_OutChar(CHAR_ARROW_RIGHT_EMPTY);                         //Символ пустого треугольника вправо |>
		//Вывод надписей второй строки меню
		//Если пункт сохранения замера и замер ещё не сохранен - символ закрашенного треугольника вправо |>
		d = (mnc_izm == 1 && (zam % 3==1)) ? CHAR_ARROW_RIGHT_FILLED : ' ';
		lcd_OutCharXY(d, 0, 2);
		d = Gx == 65535 ? 0 : zam % 3;
		//Если проводимость не известна - пункт Сохранить не выводится
		// Иначе - "Сохранить " или "Сохранено "
		LcdNadp_10(6+d);                     //Вывод надписей: "          ", "Сохранить ", "Сохранено "
		if (d == 1) {	// Если замер ещё не сохранен
			lcd_OutCharXY(CHAR_ARROW_RIGHT_EMPTY, 13, 2);      //Если замер ещё не сохранен - символ пустого треугольника вправо |>
		}
		//Вывод надписей третьей строки меню
		lcd_GotoXY(1, 3);                 //x=1, y=3
		LcdNadp_6(1);                        //Вывод надписи "Макс. "
		if (Gmax == 65535) {
			LcdStr("????.?");
		} else {
			lcd_OutInt(3, Gmax, 4, 1);         //Вывод Gmax в мкСм
		}
		//Вывод надписей четвертой строки меню
		lcd_GotoXY(1, 4);                 //x=1, y=4
		LcdNadp_6(2);                        //Вывод надписи "Мин.  "
		if (Gmin == 65535) {
			LcdStr("????.?");
		} else {
			lcd_OutInt(3, Gmin, 4, 1);         //Вывод Gmin в мкСм
		}
		//Вывод надписей пятой строки меню
		lcd_GotoXY(1, 5);                 //x=1, y=5
		LcdNadp_8(5);                        //Вывод надписи "Замеров "
		lcd_GotoXY(8, 5);                 //x=8, y=5
		lcd_OutInt(4, eeprom_read_word(mas_Nzam+n_prod), 5, 0);//Вывод числа выполненных замеров для выбранного продукта
		lcd_OutChar(161);                         //Символ пустого треугольника вниз V
	} else {
		if (mnc_izm==2) {                      //Иначе, если вывод статистики
    //Вывод текущего измеренного значения в мкСм
      if (zam!=0)                        //Если был замер
      { if (Gx==65535) sprintf(lcd_buf, "????.?");//Если признак переполнения - копирование строки в буфер
        else lcd_OutIntBuf(3, Gx, 4, 1, 0); //Вывод проводимости в мкСм
        LcdStringXY(1, 1);
        LcdNadp_6(7);                    //" мкСм "
      }
    //Вывод стрелок прокрутки
      lcd_OutCharXY(1, 163, 13);              //Символ пустого треугольника вверх ^
      lcd_GotoXY(13, 3);              //x=13, y=4
      lcd_OutChar(161);                       //Символ пустого треугольника вниз V
    //Вывод шкалы из массива skal_stat[]
      lcd_GotoXY(0, 5);               //x=0, y=5
      i=0;
      while (i<84)                       //Вывод в кэш-буфер ОЗУ байта в цикле
      { LcdCache[LcdCacheIdx++]=pgm_read_byte(skal_stat+i);
        i++;
      }
  //Вывод статистического графика
    //Нахождение максимального значения в ячейках с числом замеров для отображаемого продукта
      i=0;
      max=0;
      while (i<20)                       //Перебор 20 ячеек массива mas_stat[][] в EEPROM
      { d=eeprom_read_byte(&mas_stat[n_prod][i]);//Считывание значения из EEPROM
        if (d>max) max=d;
        i++;
      }
    //Вывод статистики
      if (max>0)                         //Если найден хотя бы один замер
      { i=0;
        while (i<20)                     //Перебор 20 ячеек массива mas_stat[][] в EEPROM
        { dat=(22*eeprom_read_byte(&mas_stat[n_prod][i]))/max;//Максимальная высота - 22 пикселя
          d=dat;
          if (d>0) LcdRect(12+i*3, 38, d, 3, 1);//Рисование закрашенного прямоугольника (низ: y=38)
          i++;
        }
      }
    //Вывод местоположения текущего замера в виде указателя-стрелки под шкалой
      if ((zam>0)&&(Gmax!=Gmin))         //Если был замер и имеются Gmax и Gmin
      { if (Gx>=Gmin)                    //Если вывод правее минимума
        { datl=Gx;                       //Изменение типа переменной на unsigned long
          if (Gx==Gmax) dat=71;
          else dat=(datl-Gmin)*60/(Gmax-Gmin)+12;//x=12...71, 60 ячеек
          if (dat>83) d=83;              //Ограничение при зашкаливании
          else d=dat;
        }
        else                             //Иначе - вывод левее минимума
        { datl=Gmin;                     //Изменение типа переменной на unsigned long
          dat=(datl-Gx)*59/(Gmax-Gmin);
          if (dat>12) d=0;
          else d=12-dat;
        }
        LcdLine(d, 45, d, 47, PIXEL_XOR);          //Вывод центральной вертикальной линии
        if (d>0) LcdLine(d-1, 46, d-1, 47, PIXEL_XOR);//Вывод левой боковой короткой вертикальной линии
        if (d>1) LcdPixel(d-2, 47, PIXEL_XOR);     //Вывод пикселя слева
        if (d<83) LcdLine(d+1, 46, d+1, 47, PIXEL_XOR);//Вывод левой боковой короткой вертикальной линии
        if (d<82) LcdPixel(d+2, 47, PIXEL_XOR);    //Вывод пикселя слева
      }
    }
    else                                 //Иначе, если пункты "Очистить статистику" или "Ред.назван"
    {//Затирание %
      lcd_GotoXY(9, 0);               //x=9, y=0
      LcdStr("    ");                    //4 пробела
      if (akt==0)                        //Если не активные пункты
      {//Вывод надписей
        i=2;
        if (n_prod>29) d=5;              //Если название продукта из EEPROM - вывод до строки "Ред.назван"
        else d=4;                        //Иначе - только "Очистить статистику"
        while (i<d)
        { lcd_GotoXY(1, i);           //x=1, y=2...4
          LcdNadp_10(i+7);               //9-"Очистить  ", 10-"статистику", 11-"Ред.назван"
          i++;
        }
        if (d==5) lcd_OutChar('.');           //Вывод точки после "Ред.назван"
      //Вывод курсора слева
        lcd_OutCharXY(0, (mnc_izm-2)*2, 166); //Символ закрашенного треугольника вправо |>
      //Вывод стрелок-указателей справа
        lcd_OutCharXY(13, 1, 163);            //Символ пустого треугольника вверх ^
        lcd_OutCharXY(13, 3, 165);            //Символ пустого треугольника вправо |>
        if (d==5) lcd_OutCharXY(13, 4, 165);  //Если название продукта из EEPROM - символ пустого треугольника вправо |>
      }
      else                               //Иначе, если активен какой-либо из пунктов "Очистить статистику" или "Ред.назван"
      { if (mnc_izm==3)                  //Иначе, если подтверждение очистки статистики
        {//Вывод надписей
          lcd_GotoXY(3, 2);           //x=3, y=2
          LcdNadp_10(12);                //"Очистить? "
          lcd_OutCharXY(0, 4, 163);           //Символ пустого треугольника вверх ^
          lcd_OutChar(' ');                   //Пробел
          LcdNadp_10(13);                //"Да     Нет"
          lcd_OutChar(' ');                   //Пробел
          lcd_OutChar(165);                   //Символ пустого треугольника вправо |>
          d=167;                         //Символ пустого треугольника влево <| в позиции x=0, y=0
        }
        else                             //Иначе, если редактирование названия продукта в EEPROM
        { d=' ';                         //Символ пробела в позиции x=0, y=0
          if (n_nazv==0) d=167;          //Если первая редактируемая буква - символ пустой треугольник влево <| в позиции x=0, y=0
          else lcd_OutCharXY(1, 2, 167);      //Иначе - вывод пустого треугольника влево <| в позиции x=1, y=2
        //Вывод надписей
          lcd_GotoXY(1, 0);           //x=1, y=0
          lcd_OutChar(' ');                   //Пробел
          LcdNadp_10(14);                //"РЕД.НАЗВАН"
          lcd_OutChar('.');                   //Точка
          lcd_GotoXY(3, 2);           //x=3, y=2
          i=0;
          while (i<8)                    //Вывод строки из 8 символов
          { lcd_OutChar(mas_name[n_prod-30][i]);
            i++;
          }
          if (n_nazv<7)                  //Если не последняя редактируемая буква
          { lcd_OutChar(' ');                 //Пробел
            lcd_OutChar(165);                 //Символ пустого треугольника вправо |>
          }
        //Вывод курсора под редактируемой буквой
          lcd_OutCharXY(3+n_nazv, 3, 164);    //Символ двух закрашенных треугольников вверх+вниз
        }
        lcd_OutCharXY(0, 0, d);               //Вывод символа в позиции x=0, y=0
      }
    }
  }
}
//
/*----Функция вывода меню настроек----*/
void menu_nastr () {
	unsigned char i=0;                     //Счетчик символов
  unsigned char m=0;                     //Счетчик по горизонтали массива nadp_mPDK[31][12]
  unsigned char y_kur=0;                 //Местоположение курсора по y
  unsigned char dat=0;                   //Данные
  unsigned int r=0;                      //Сопротивление/проводимость
//0-время подсв.,1-яркость,2-таймер,3-звук,4-контрастность,5-Uакк,6-Rx
//Вывод верхнего заголовка
  lcd_GotoXY(0, 0);                   //x=0, y=0
  if (akt==1) dat=32;                    //Если активен пункт меню - пробел
  else dat=167;                          //Иначе - символ пустого треугольника влево <|
  lcd_OutChar(dat);                           //Символ пустого треугольника влево <| или пробел
  LcdNadp_10(4);                         //Вывод надписи " НАСТРОЙКИ"
//Вывод первой страницы меню настроек
	if (mnc_nastr < 5) {                      //Если первая страница меню настроек
		//Вычисление местоположения курсора по y
		y_kur = 1 + mnc_nastr;
		//Вывод 5 строк надписей меню
		while (m < 5) {
			lcd_GotoXY(1, m+1);             //Установка координат для вывода первого символа строки
      		LcdNadp_8(m);                      //Вывод надписей: "T подсв.", "Яркость ", "Таймер  ", "Звук    ", "Контраст"
    			//Вывод регулируемых параметров
      		i = 0;                               //Сброс счетчика символов надписи
      		if (m == 0) {                         //Если пункт таймера подсветки
				LcdNadp_4(5+ligh_off);           //Вывод надписей " ---", " 10с", " 15с", " 20с", " 30с", " 45с", " 60с"
			} else {
				if (m==1) {                       //Если пункт яркости подсветки
					LcdSkalaXYFont (9, 2, 3, yark*100/9);//Вывод шкалы из 10 черточек, заполненной на "процент"
        			} else {
        				if (m==2) {                     //Если пункт таймера
						LcdNadp_4(taym_off);         //Вывод надписей "Выкл", "1мин", "2мин", "3мин", "5мин"
          			} else {
          				if (m==3) {                    //Если пункт звука
							LcdNadp_4(13+sound);       //Вывод "Выкл" или "Вкл."
            				} else {                        //Иначе - контрастность дисплея
            				lcd_OutInt(3, contrast, 4, 0);
						}
					}
				}
			}
			//Вывод значков в правой колонке
      		if (akt == 1) {                        //Если активен пункт меню настроек
				if (m==mnc_nastr) dat=164;       //Если строка активного пункта - символ двух закрашенных треугольников вверх+вниз
        			else dat=32;                     //Иначе - символ пробела
      		} else
      			dat=165;                      //Иначе - символ пустого треугольника вправо |>
      		lcd_OutCharXY(13,m+1,dat);                       //Вывод символа
      		m++;
		}
	}
//Вывод второй страницы меню настроек
  else {                                  //Иначе - вывод второй страницы меню настроек
	meassure();                             //Проведение замера
  //Вычисление местоположения курсора по y и определение вида курсора
    y_kur=mnc_nastr-3;
  //Вывод верхнего заголовка "КАЛИБРОВКА"
    lcd_GotoXY(0, 0);                 //x=0, y=0
    if (akt==1) dat=32;                  //Если активен пункт меню - пробел
    else dat=163;                        //Иначе - символ пустого треугольника вверх ^
    lcd_OutChar(dat);                         //Символ пустого треугольника вверх ^ или пробел
    lcd_OutChar(' ');                         //Вывод пробела
    LcdNadp_10(5);                       //Вывод надписи "КАЛИБРОВКА"
  //Вывод пункта напряжения аккумулятора
    lcd_GotoXY(1, 2);                 //x=1, y=2
    LcdNadp_6(4);                        //"Uакк,В"
    lcd_OutInt(1, Ubat_mV, 2, 3);           //Вывод напряжения в X.XXX В
    if (akt==1)                          //Если активен пункт меню настроек
    { if (mnc_nastr==5) dat=164;         //Если активен данный пункт - символ двух закрашенных треугольников вверх+вниз
      else dat=32;                       //Иначе - символ пробела
    }
    else dat=165;                        //Иначе - символ пустого треугольника вправо |>
    lcd_OutChar(dat);                         //Вывод символа
  //Вывод пункта измеренного сопротивления
    lcd_GotoXY(1, 3);                 //x=1, y=3
    LcdNadp_6(5);                        //Вывод надписи "Rx,Ом "
    lcd_OutChar(' ');                         //Вывод пробела
    r=clk_Rx(ADCx10);                    //Вычисление Rx
    if (r==65535) sprintf(lcd_buf, "?????");//Если признак переполнения - копирование строки в буфер
    else lcd_OutIntBuf(2, r, 5, 0, 0);      //Иначе - вывод сопротивления в Омах
    LcdStringXY(8, 3);
    if (akt==1)                          //Если активен пункт меню настроек
    { if (mnc_nastr==6) dat=164;         //Если активен данный пункт - символ двух закрашенных треугольников вверх+вниз
      else dat=32;                       //Иначе - символ пробела
    }
    else dat=165;                        //Иначе - символ пустого треугольника вправо |>
    lcd_OutChar(dat);                         //Вывод символа
  //Вывод пункта измеренной проводимости
    lcd_GotoXY(0, 5);                 //x=0, y=4
    LcdNadp_8(6);                        //Вывод надписи "Gx,мкСм "
    r=clk_Gx10(ADCx10);                  //Вычисление Gx
    if (r==65535) sprintf(lcd_buf, "????.?");//Если признак переполнения - копирование строки в буфер
    else lcd_OutIntBuf(3, r, 4, 1, 0);      //Иначе - вывод проводимости в мкСм
    LcdStringXY(8, 5);
  }
//Вывод курсора
  lcd_GotoXY(0, y_kur);               //x=0, y=1...5
  if (akt==1) dat=167;                   //Если активный пункт меню - пустой треугольник влево <|
  else dat=166;                          //Иначе - закрашенный треугольник вправо |>
  lcd_OutChar(dat);                           //Символ закрашенного треугольника вправо |> или пустого влево <|
}
//
/*----Функция вывода меню норм ПДК----*/
void menu_PDK() {
	//Вывод верхнего заголовка "Нормы ПДК,мг"
	lcd_OutCharXY(0, 0, 167);                   //Символ пустого треугольника влево <|, x=0, y=0
	LcdNadp_8(7);                          //Вывод надписи "Нормы ПД"
	LcdNadp_4(12);                         //Вывод надписи "К,мг"
	//Вывод курсора
	lcd_OutCharXY(0, 1+mnc_PDK-sdvig_PDK, 166); //x=0, y=1...5, cимвол закрашенного треугольника вправо |>
	//Вывод 5 строк надписей меню из массива nadp_mPDK[31][12]
	for (uint8_t m = 0; m < 5; m++) {
		lcd_GotoXY(1, m+1);               //Установка координат для вывода первого символа строки
		for (uint8_t i = 0; i < 12; i++) {
			lcd_OutChar(pgm_read_byte(&nadp_mPDK[m+sdvig_PDK][i]));
		}
	}
	//Вывод стрелок вверх-вниз в последней колонке дисплея
	if (sdvig_PDK > 0) {
		lcd_OutCharXY(13, 1, 163); //Символ пустого треугольника вверх ^
	}
	if (sdvig_PDK < 26) {
		lcd_OutCharXY(13, 5, 161);//Символ пустого треугольника вниз V
	}
}
//
/*----Функция вывода меню сообщений----*/
void menumess (uint8_t ms) {
	//ms=0 - "Выключение"
  //ms=1 - "Аккумулятор разряжен!"
  //ms=2 - "Аккумулятор заряжен. Выключение"
  //ms=3 - "Аккумулятор заряжен!"
  //ms=4 - "Статистика очищена"
  //ms=5 - "Замер сохранён!"
	clean_cache();                         //Очистка КЭШ-буфера в ОЗУ МК
	for (uint8_t m = 0; m < 3; m++) {
		lcd_GotoXY(2, pgm_read_byte(&tab_mes[ms][m*2]));//Установка координат для вывода первого символа строки
		for (uint8_t i = 0; i < 11; i++) {
			lcd_OutChar(pgm_read_byte(&nadpis_mes[pgm_read_byte(&tab_mes[ms][m*2+1])][i]));
		}
	}
	wr_batt();                             //Вывод символа батарейки в правом верхнем углу
	LcdUpdate();                           //Вывод информации в дисплей
}
//
/*----Функция вывода символа батарейки в правом верхнем углу----*/
void wr_batt() {
	if (zar == 1) {
		batter = 6;                  //Если идет процесс зарядки - символ сетевой вилки
	}
	lcd_GotoXY(13, 0);                  //Позиция символа: x=13, верхняя строка
	lcd_OutChar(169+batter);                    //Вывод символа в буфер ОЗУ МК
}
//
/*----Функция вывода меню зарядки----*/
void menu_zar() {
	unsigned char persent;                 //Процент заполнения символа батареи
	//Вывод большого символа батареи
	if (Ubat > 415) {
		persent = 100;             //Uбат>4,15В - 100%
	} else if (Ubat > 380) {
		persent = (Ubat-380)*25/35+75;//Uбат>3,8В - 75...100%
	} else if (Ubat > 360) {
		persent = (Ubat-360)*50/20+25;//Uбат>3,6В - 25...75%
	} else if (Ubat > 300) {
		persent = (Ubat-300)*25/60;//Uбат>3,0В - 0...25%
	} else {
		persent = 0;                        //Uбат<3,0В - 0%
	}
	LcdBatt(34, 2, 48, 28, persent);       //Вывод большого символа батареи с заполнением на %
//Вывод напряжения батареи
	lcd_OutIntBuf(0, Ubat, 1, 2, 0);
	LcdStringBold(1, 4);
	LcdStrBold(" В");
}
